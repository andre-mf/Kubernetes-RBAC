apiVersion: v1
kind: ServiceAccount
metadata:
  name: user-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dashboard-role
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "services"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dashboard-reader-bind
subjects:
- kind: ServiceAccount
  name: user-dashboard
  namespace: default
roleRef:
  kind: ClusterRole
  name: dashboard-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dashboard
spec:
  selector:
    matchLabels:
      app: k8s-dashboard
  template:
    metadata:
      labels:
        app: k8s-dashboard
    spec:
      serviceAccount: user-dashboard
      containers:
        - name: k8s-dashboard
          image: kubedevio/k8s-dashboard
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-dashboard
spec:
  selector:
    app: k8s-dashboard
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30000
  type: NodePort
    